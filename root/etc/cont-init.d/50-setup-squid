#!/usr/bin/with-contenv bash
set -e

# Copy a default configuration with no SSL support
# Link a volume to this file to add custom configurations
cp /conf/squid.conf /squid/etc/squid.conf

mkdir -p ${SQUID_LOG_DIR}
chmod -R 755 ${SQUID_LOG_DIR}
chown -R ${SQUID_USER}:${SQUID_USER} ${SQUID_LOG_DIR}

mkdir -p ${SQUID_CACHE_DIR}
chown -R ${SQUID_USER}:${SQUID_USER} ${SQUID_CACHE_DIR}

# Make user folders
cd /squid
mkdir certs
mkdir coredumps
chown ${SQUID_USER}:${SQUID_USER} certs
chmod 700 certs
cd certs

# REF: https://elatov.github.io/2019/01/using-squid-to-proxy-ssl-sites/
# REF: https://wiki.squid-cache.org/ConfigExamples/Intercept/SslBumpExplicit
openssl req -new -newkey rsa:2048 \
  -sha256 -days 365 -nodes -x509 \
  -extensions v3_ca \
  -subj '/CN=squid-client' \
  -keyout squid-ca-key.pem \
  -out squid-ca-cert.pem

# Combine the two files
cat squid-ca-cert.pem squid-ca-key.pem > squid-ca-cert-key.pem

/squid/libexec/security_file_certgen -c -s /var/lib/ssl_db -M 16MB
chown ${SQUID_USER}:${SQUID_USER} -R /var/lib/ssl_db

# Confirm the configs are good
/squid/sbin/squid -k parse || exit 1

# Create cache folders
exec /squid/sbin/squid -N -C -z -d 1 || exit 1

exit 0